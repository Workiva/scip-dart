{
    "metadata": {
        "toolInfo": {
            "name": "scip-dart",
            "version": "1.1.5"
        },
        "projectRoot": "file:///Users/matthewnitschke/Repos/Workiva/scip-dart/snapshots/input/staging-project",
        "textDocumentEncoding": "UTF8"
    },
    "documents": [
        {
            "language": "Dart",
            "relativePath": "lib/main.dart",
            "occurrences": [
                {
                    "range": [
                        0,
                        0,
                        0
                    ],
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`main.dart`/",
                    "symbolRoles": 1,
                    "syntaxKind": "IdentifierNamespace"
                },
                {
                    "range": [
                        0,
                        1,
                        11
                    ],
                    "symbol": "scip-dart pub dart:core 2.18.0 dart:core/`annotations.dart`/Deprecated#"
                },
                {
                    "range": [
                        1,
                        6,
                        9
                    ],
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`main.dart`/foo.",
                    "symbolRoles": 1
                },
                {
                    "range": [
                        3,
                        5,
                        9
                    ],
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`main.dart`/main().",
                    "symbolRoles": 1
                },
                {
                    "range": [
                        4,
                        8,
                        11
                    ],
                    "symbol": "local 0",
                    "symbolRoles": 1,
                    "diagnostics": [
                        {
                            "severity": "Information",
                            "code": "HintCode.UNUSED_LOCAL_VARIABLE",
                            "message": "The value of the local variable 'soo' isn't used."
                        }
                    ]
                },
                {
                    "range": [
                        5,
                        2,
                        7
                    ],
                    "symbol": "scip-dart pub dart:core 2.18.0 dart:core/`print.dart`/print()."
                },
                {
                    "range": [
                        5,
                        8,
                        11
                    ],
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`main.dart`/foo.",
                    "diagnostics": [
                        {
                            "severity": "Information",
                            "code": "HintCode.DEPRECATED_MEMBER_USE_FROM_SAME_PACKAGE_WITH_MESSAGE",
                            "message": "'foo' is deprecated and shouldn't be used. This is deprecated.",
                            "tags": [
                                "Deprecated"
                            ]
                        }
                    ]
                }
            ],
            "symbols": [
                {
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`main.dart`/"
                },
                {
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`main.dart`/foo.",
                    "documentation": [
                        "```dart\nString foo\n```"
                    ]
                },
                {
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`main.dart`/main().",
                    "documentation": [
                        "```dart\nvoid main()\n```"
                    ]
                },
                {
                    "symbol": "local 0",
                    "documentation": [
                        "```dart\nString soo\n```"
                    ]
                }
            ]
        },
        {
            "language": "Dart",
            "relativePath": "lib/other.dart",
            "occurrences": [
                {
                    "range": [
                        0,
                        0,
                        0
                    ],
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`other.dart`/",
                    "symbolRoles": 1,
                    "syntaxKind": "IdentifierNamespace"
                },
                {
                    "range": [
                        0,
                        6,
                        9
                    ],
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`other.dart`/Foo#",
                    "symbolRoles": 1
                }
            ],
            "symbols": [
                {
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`other.dart`/"
                },
                {
                    "symbol": "scip-dart pub dart_test 1.0.0 lib/`other.dart`/Foo#",
                    "documentation": [
                        "```dart\nclass Foo\n```"
                    ]
                }
            ]
        }
    ],
    "externalSymbols": [
        {
            "symbol": "scip-dart pub dart:core 2.18.0 dart:core/`annotations.dart`/Deprecated#",
            "documentation": [
                "```dart\nclass Deprecated\n```",
                "The annotation `@Deprecated('migration')` marks a feature as deprecated.\nThe annotation [deprecated] is a shorthand for deprecating until\nan unspecified \"next release\" without migration instructions.\nA feature can be any part of an API, from a full library to a single\nparameter.\nThe intent of the `@Deprecated` annotation is to inform authors\nwho are currently using the feature,\nthat they will soon need to stop using that feature in their code,\neven if the feature is currently still working correctly.\nDeprecation is an early warning that the deprecated feature\nis scheduled to be removed at a later time,\na time possibly specified in [message].\nA deprecated feature should no longer be used,\ncode using it will break at some point in the future.\nIf existing code is using the feature,\nthat code should be rewritten to no longer use the deprecated feature.\nA deprecated feature should document how the same effect can be achieved in\n[message], so the programmer knows how to rewrite the code.\nThe `@Deprecated` annotation applies to libraries, top-level declarations\n(variables, getters, setters, functions, classes, mixins,\nextension and typedefs),\nclass-level declarations (variables, getters, setters, methods, operators or\nconstructors, whether static or not), named optional parameters and\ntrailing optional positional parameters.\nDeprecation applies transitively to parts of a deprecated feature:\n- If a library is deprecated, so is every member of it.\n- If a class is deprecated, so is every member of it.\n- If a variable is deprecated, so are its implicit getter and setter.\nIf a feature is deprecated in a superclass, it is *not* automatically\ndeprecated in a subclass as well. It is reasonable to remove a member\nfrom a superclass and retain it in a subclass, so it needs to be possible\nto deprecate the member only in the superclass.\nA tool that processes Dart source code may report when:\n- the code imports a deprecated library.\n- the code exports a deprecated library, or any deprecated member of\na non-deprecated library.\n- the code refers statically to a deprecated declaration.\n- the code uses a member of an object with a statically known\ntype, where the member is deprecated on the interface of the static type.\n- the code calls a method with an argument where the\ncorresponding optional parameter is deprecated on the object's static type.\nIf the deprecated use is inside a library, class or method which is itself\ndeprecated, the tool should not bother the user about it.\nA deprecated feature is expected to use other deprecated features."
            ]
        },
        {
            "symbol": "scip-dart pub dart:core 2.18.0 dart:core/`print.dart`/print().",
            "documentation": [
                "```dart\nvoid print(Object object)\n```",
                "Prints a string representation of the object to the console."
            ]
        }
    ]
}